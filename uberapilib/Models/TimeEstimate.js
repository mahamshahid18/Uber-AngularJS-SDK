/**
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of TimeEstimate
 *
 * @constructor
 */
angular.module('UberAPILib')
    .factory('TimeEstimate', ['BaseModel', TimeEstimateModel]);

    function TimeEstimateModel(BaseModel) {
        var TimeEstimate = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.displayName = this.getValue(obj.displayName);
            this.estimate = this.getValue(obj.estimate);
            this.productId = this.getValue(obj.productId);
        };

        TimeEstimate.prototype = new BaseModel();
        TimeEstimate.prototype.constructor = TimeEstimate;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        TimeEstimate.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'displayName', realName: 'display_name' },
                { name: 'estimate', realName: 'estimate' },
                { name: 'productId', realName: 'product_id' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        TimeEstimate.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * Display name of product.
         *
         * @return {string}
         */
        TimeEstimate.prototype.getDisplayName = function () {
            return this.displayName;
        };
    
        /**
         * Setter for DisplayName
         * 
         * @param {string} value 
         */
        TimeEstimate.prototype.setDisplayName = function (value) {
            this.displayName = value;
        };
    
        /**
         * ETA for the product (in seconds). Always show estimate in minutes.
         *
         * @return {int}
         */
        TimeEstimate.prototype.getEstimate = function () {
            return this.estimate;
        };
    
        /**
         * Setter for Estimate
         * 
         * @param {int} value 
         */
        TimeEstimate.prototype.setEstimate = function (value) {
            this.estimate = value;
        };
    
        /**
         * Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in
         * San Francisco will have a different product_id than uberX in Los Angeles.
         *
         * @return {string}
         */
        TimeEstimate.prototype.getProductId = function () {
            return this.productId;
        };
    
        /**
         * Setter for ProductId
         * 
         * @param {string} value 
         */
        TimeEstimate.prototype.setProductId = function (value) {
            this.productId = value;
        };
    
        return TimeEstimate;
    }

}(angular));
